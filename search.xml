<?xml version="1.0" encoding="utf-8"?>
<search>
  
    
    <entry>
      <title><![CDATA[OpenCV-学习笔记（一）平均背景法]]></title>
      <url>%2F2017%2F01%2F23%2FBackground-separation-A1%2F</url>
      <content type="text"><![CDATA[为达到前景目标的识别，譬如，交通路口对车辆的识别、监控器对行人的识别，常用的且较为有效的方法就是背景差分法（还有其他的方法，比如光流场法,帧差法），即用一张有要识别目标的图像减去相应的背景图像，那么所得的结果便是我们所要的目标。 然而，如何获取一个“美好”的背景图，是背景差分法的关键和难点。此处介绍一种最为简单的获取背景的方法——平均背景法。 顾名思义，其基本思想就是，将所采集到的背景图片叠加求和，而后求取平均值作为要求的背景。其大致算法流程如下： 1.将采集到的部分图片，利用OpenCV的cvAcc函数累加求和，并统计累加次数，累加完成后在用cvConvertScale函数求取平均值，记为A。（注意理解该平均值的意思是在（x,y）位置处，所有参与求和计算的图像在该点出的像素平均值，每一点的像素平均值是不同的） 2.前一帧图像和当前参与累加的图像求差的绝对值，利用cvAbsDiff函数，而后该绝对值图像也进行累加求平均值，记为D。（同理这是某点的差值平均值）它描述的是某点像素值得波动幅度。 3.那么有1和2便可以认为，图像某点的像素值P若满足A-D &lt; P &lt; A+D，则认为此点属于背景，然而由于前景目标的加入，可能对背景点的亮度有一定的影响，故对波动幅度D进行一定的放缩，若 A -KD &lt; p &lt; A + KD，便认为该点为背景点。自然在该范围外的点，便是我们需要的前景点。那么用cvThreshold函数完成二值化。我们的目的就达到了。 此为背景建模最简单的方法，在室内等干扰较少的环境下使用时，效果较好，一旦有些许干扰则效果严重下降。一种非常有效，不管是运行速度还是处理效果都非常好的算法是CodeBook算法，下篇博客中将会介绍。]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[OpenCV-简单图像操作（一）]]></title>
      <url>%2F2017%2F01%2F13%2FOpenCV-A1%2F</url>
      <content type="text"><![CDATA[加载图像(用cv::imread) imread功能是加载图像文件成为一个Mat对象，其中第一个参数表示图像文件名称 第二个参数，表示加载的图像是什么类型，支持常见的三个参数值 IMREAD_UNCHANGED (&lt;0) 表示加载原图，不做任何改变 IMREAD_GRAYSCALE ( 0)表示把原图作为灰度图像加载进来 IMREAD_COLOR (&gt;0) 表示把原图作为RGB图像加载进来 注意：OpenCV支持JPG、PNG、TIFF等常见格式图像文件加载 显示图像 (cv::namedWindow 与cv::imshow) namedWindos功能是创建一个OpenCV窗口，它是由OpenCV自动创建与释放，你无需取销毁它。 常见用法namedWindow(“Window Title”, WINDOW_AUTOSIZE) WINDOW_AUTOSIZE会自动根据图像大小，显示窗口大小，不能人为改变窗口大小 WINDOW_NORMAL,跟QT集成的时候会使用，允许修改窗口大小。 imshow根据窗口名称显示图像到指定的窗口上去，第一个参数是窗口名称，第二参数是Mat对象 修改图像 (cv::cvtColor) cvtColor的功能是把图像从一个彩色空间转换到另外一个色彩空间，有三个参数，第一个参数表示源图像、第二参数表示色彩空间转换之后的图像、第三个参数表示源和目标色彩空间如：COLOR_BGR2HLS、COLOR_BGR2GRAY等 保存图像(cv::imwrite) 保存图像文件到指定目录路径 只有8位、16位的PNG、JPG、Tiff文件格式而且是单通道或者三通道的BGR的图像才可以通过这种方式保存 保存PNG格式的时候可以保存透明通道的图片 可以指定压缩参数]]></content>
    </entry>

    
  
  
</search>
